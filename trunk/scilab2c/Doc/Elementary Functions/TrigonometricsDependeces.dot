digraph TrigonometricsFunctions {
	size="6,6";
	node [shape=circle];

//
// -*- Basic Call -*-
//
F77_Call [label="Fortan Call", shape=doublecircle, color=green];
C_Call [label="C Call", shape=doublecircle, color=blue];
LAPACK_Call [label="LAPACK Call", shape=doublecircle, color=yellow];


//
// -*- Specific LAPACK Call -*-
//
Dlamch_E_Call [label="dlamch('E')", comment="Précision Machine - LAPACK", shape=doublecircle, color=red];
Dlamch_U_Call [label="dlamch('U')", comment="??? - LAPACK", shape=doublecircle, color=red];
Dlamch_O_Call [label="dlamch('O')", comment="??? - LAPACK", shape=doublecircle, color=red];


//
// -*- Functions definition -*-
//

// Cosinus
Cos_Real [label="cos(R)"];
Cos_Complex [label="cos(C)"];
Cos_Hyperbolic_Real [label="ch(R)"];
Cos_Hyperbolic_Complex [label="ch(C)"];

// Sinus
Sin_Real [label="sin(R)"];
Sin_Complex [label="sin(C)"];
Sin_Hyperbolic_Real [label="sh(R)"];
Sin_Hyperbolic_Complex [label="sh(C)"];

// Tangeante
Tan_Real [label="tan(R)"];
Tan_Complex [label="tan(C)", comment="wtan"];
Tan_Hyperbolic_Real [label="tanh(R)"];

// Exponentielle
Exp_Real [label="exp(R)"];
Exp_Complex [label="exp(C)"];

// Log
Log_Real [label="log(R)"];
Log_Complex [label="log(C)"];

// Racine Carrée
Sqrt_Real [label="sqrt(R)"];
Sqrt_Positive_Real [label="sqrt(R+)"];
Sqrt_Negative_Real [label="sqrt(R-)"];
Sqrt_Complex [label="sqrt(C)", comment="wsqrt"];

// Valeur Absolue
Abs_Real [label="abs(R)", comment="|R|"];

// Signe
Sign_Real [label="sign(R)"];



//
// -*- Functions call links -*-
//

// -*- DLAMCH -*-
Dlamch_E_Call -> LAPACK_Call;
Dlamch_U_Call -> LAPACK_Call;
Dlamch_O_Call -> LAPACK_Call;


// -*- COS -*-
// cos(a+ib) = cos(a).ch(b) - i.sin(a).sh(b)
Cos_Complex -> {
	Cos_Real
	Sin_Real
	Cos_Hyperbolic_Real
	Sin_Hyperbolic_Real
	};

// Call a cosinus function in F77 math lib
Cos_Real -> F77_Call;

// -*- SIN -*-
//
// sin(a+ib) = sin(a).ch(b) + i.cos(a).sh(b)
Sin_Complex -> {
	Cos_Real
	Sin_Real
	Cos_Hyperbolic_Real
	Sin_Hyperbolic_Real
	};

// Call a sinus function in F77 math lib
Sin_Real -> F77_Call;


// -*- TAN -*-
//
// tan(a+ib) = x_r + i.x_i
//
// x_r= 1/2 sin(2.a) / d
//
// x_i = | sh(2.b) / 2.d	si |b| <= L
//	 | sign(a)
//
// d = cos(a)^2 + sh(b)^2
//
// L = 1 + log(2 / sqrt(dlamch('e')))
Tan_Complex -> {
	Cos_Real
	Sin_Hyperbolic_Real
	Log_Real
	Sqrt_Real
	Dlamch_E_Call
	Abs_Real
	Sign_Real
	};

// Call a tangeante function in F77 math lib
Tan_Real -> F77_Call;


// -*- LOG -*-
//
// log(a+ib) = x_r + i.x_i
//
// Constantes :
//		L_inf = sqrt(dlamch('U'))
//		L_sup = sqrt(R_max / 2)
//		R_max = dlamch('O')
//		t = pythag(|a|,|b|)
//		r = |b|/|a|
//
// x_i = atan2(b, a)
//
// x_r = | 1/2 logp1((|a|-1)(|a|+1) + |b|^2)		si 1/2 <= |a| <= sqrt(2)
//	 | 1/2 log(|a|^2 + |b|^2)			si L_inf < |b| && |a| < L_sup
//	 | |a|						si |a| > R_max
//	 | log(t)					si t <= R_max
//	 | log(|a|) + 1/2 logp1(r^2)			sinon
Log_Complex -> {
	Sqrt_Real
	Dlamch_U_Call
	Dlamch_O_Call
	Pythag_Real
	LogP1_Real
	Log_Real
	Abs_Real
	Pythag_Real
	ATan2_Real
	};

// Call a log function in F77 math lib
Log_Real -> F77_Call;



// -*- SQRT -*-
//
// sqrt(a+ib) = x_r + i.x_i
//
// (1) a = 0
//~~~~~~~~~~~~
// x_r = | sqrt(|b| / 2)		si |b| <= BRmin
//	 | sqrt(|b|).sqrt(1/2)
//
// x_i = sign(b).x_r
//
// (2) |a| >= BRmax && |b| >= BRmax
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//  - Si t > Rmax
//	a = a / 16
//      b = b / 16
//      t = sqrt(2.|a| + pythag(a,b))
//	x_r = | 2.t		si a >= 0
//	      | 4.|b| / t
//	x_i = | 4.b / t		si a >= 0
//	      | 2.sign(b).t
//
//  - Sinon
//
//	x_r = | t / 2		si a >= 0
//	      | |b| / t
//
//	x_i = | b / t		si a >= 0
//	      | sign(b) / 2.t
//
// (3) Tous les cas pourris
//~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// x_r = | a + b		si a is NaN && b is NaN
//	 | |b|			si |b| > Rmax
//	 | 0			si a < -Rmax
//	 | a
//
// x_i = | a + b		si a is NaN && b is NaN
//	 | b			si |b| > Rmax
//	 | sign(b).|a|		si a < -Rmax
//	 | 0
//

// Separate positive and negative case
Sqrt_Real -> {
	Sqrt_Positive_Real
	Sqrt_Negative_Real
	};

// Call another sqrt function, treat it as complex
Sqrt_Negative_Real -> Sqrt_Complex;

// Call a sqrt function in F77 math lib
Sqrt_Positive_Real -> F77_Call;


// -*- SIGN -*-
//
// Call a sign function in F77 math lib
Sign_Real -> F77_Call;


// -*- ABS -*-
//
// Call a abs function in F77 math lib
Abs_Real -> F77_Call;

}